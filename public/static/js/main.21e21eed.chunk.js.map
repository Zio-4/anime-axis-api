{"version":3,"sources":["Images/user.svg","Images/Sasuke.png","Components/Anime/AnimeCardByScore.js","Components/Anime/AnimeCardAiring.js","Components/Anime/AnimeCardPopularity.js","Components/Anime/AnimeCardUpcoming.js","Components/Loading.js","Hooks/useGetData.js","Redux-Toolkit/search.js","Components/Homepage.js","Components/User/Login.js","Components/User/SignUp.js","Components/NavBar.js","Components/Anime/AnimePage.js","Components/User/ProfilePage.js","Components/Manga/MangaCardByPopularity.js","Components/Manga/MangaCardByScore.js","Components/Manga/MangaCardNovels.js","Components/Manga/MangaCardOneShots.js","Components/Manga/MangaHome.js","Components/Manga/MangaPage.js","Components/Anime/TopAnimeUpcomingList.js","Components/Anime/TopAnimeByPopularityList.js","Components/Anime/TopAnimeAiringList.js","Components/Anime/TopAnimeByScoreList.js","Components/Manga/TopMangaNovelsList.js","Components/Manga/TopMangaByPopularityList.js","Components/Manga/TopMangaByScoreList.js","Components/Manga/TopMangaOneShotsList.js","Components/Anime/AnimeSearchPage.js","Components/Forums/AnimeForum.js","Components/Forums/GeneralForum.js","Components/Forums/MangaForum.js","Components/Forums/ForumPostForm.js","Components/Forums/Comment.js","Components/Forums/ForumPost.js","Components/Anime/AnimeList.js","Components/Manga/MangaList.js","Components/Manga/MangaSearchPage.js","App.js","reportWebVitals.js","Redux-Toolkit/store.js","index.js"],"names":["module","exports","AnimeCardByScore","title","id","image","OverlayTrigger","placement","overlay","Tooltip","Col","xs","md","Card","className","key","to","Img","src","alt","AnimeCardAiring","AnimeCardPopularity","AnimeCardUpcoming","Loading","type","color","getData","url","a","axios","console","log","message","useGetData","onSuccess","useQuery","searchSlice","createSlice","name","initialState","searchQuery","searchResults","reducers","updateSearchQuery","state","action","payload","updateSearchResults","actions","Homepage","useState","animeSearchQuery","setAnimeSearchQuery","history","useHistory","dispatch","useDispatch","animeScore","data","animeScoreLoading","isLoading","animeAiring","animeAiringLoading","animePopularity","animePopularityLoading","animeUpcoming","animeUpcomingLoading","handleSubmit","e","preventDefault","response","results","push","renderTopAnimeByScoreCards","top","slice","map","anime","mal_id","image_url","renderTopAnimeAiring","renderTopAnimeByPopularity","renderTopUpcomingAnime","Container","style","width","value","onChange","target","placeholder","href","onClick","fluid","Row","Button","size","Login","setUserIsLoggedIn","username","password","formData","setFormData","errors","setErrors","handleInput","post","lg","sm","loginIcon","Form","onSubmit","Group","Control","variant","undefined","location","Alert","length","sasuke","SignUp","password_confirmation","Label","controlId","autoComplete","err","NavBar","userIsLoggedIn","showModal","setShowModal","logoutUser","delete","handleCloseModal","Navbar","bg","fixed","Brand","Nav","NavDropdown","menuVariant","Item","Link","Modal","show","onHide","animation","aria-labelledby","centered","Header","closeButton","Title","Footer","AnimePage","user","params","useParams","loginAlertState","setLoginAlertState","addedAlertState","setAddedAlertState","listButton","setListButton","animes","find","score","user_id","Body","title_english","ListGroup","rank","episodes","duration","role","aria-label","onClose","dismissible","Text","synopsis","genres","g","Badge","pill","text","aired","string","popularity","producers","prod","premiered","rating","status","studios","studio","title_japanese","title_synonyms","syn","ProfilePage","showBioModal","setShowBioModal","showAvatarModal","setShowAvatarModal","avatarModalValue","setAvatarModalValue","bioModalTextValue","setBioModalTextValue","bioAlertState","setBioAlertState","avatarAlertState","setAvatarAlertState","queryClient","useQueryClient","updateBio","useMutation","editBio","patch","setQueryData","onError","error","updateAvatar","editAvatar","handleCloseBio","handleShowBio","handleCloseAvatar","handleShowAvatar","avatar","bio","as","mutate","MangaCardByPopularity","MangaCardByScore","MangaCardNovels","MangaCardOneShots","MangaHome","mangaSearchQuery","setMangaSearchQuery","mangaScore","mangaScoreLoading","mangaOneShots","mangaOneShotsLoading","mangaPopularity","mangaPopularityLoading","mangaNovels","mangaNovelsLoading","renderMangaByScore","manga","renderMangaOneShots","renderMangaByPopularity","renderMangaNovels","MangaPage","mangas","m","med","chapters","volumes","background","published","authors","author","serializations","s","TopAnimeUpcomingList","renderTopAnimeUpcomingList","Table","striped","bordered","hover","TopAnimeByPopularityList","renderTopAnimeByPopularityList","TopAnimeAiringList","renderTopAnimeAiringList","TopAnimeByScoreList","renderTopAnimeByScore","TopMangaNovelsList","renderTopMangaNovels","TopMangaByPopularityList","renderTopMangaByPopularity","TopMangaByScoreList","renderTopMangaByScore","TopMangaOneShotsList","renderTopMangaOneShots","AnimeSearchPage","setIsLoading","useSelector","search","handleSearch","renderResults","AnimeForum","animePosts","renderAnimePosts","post_time","number_of_comments","from","GeneralForum","generalPosts","renderGeneralPosts","MangaForum","mangaPosts","renderMangaPosts","ForumPostForm","content","forumIdState","setForumIdState","handleChange","forum_id","useEffect","rows","Comment","time","ForumPost","setShow","modalTextValue","setModalTextValue","alertState","setAlertState","postNewComment","addNewComment","oldQueryData","comments","commentsIsLoading","forumPost","handleClose","renderComments","c","comment_time","border","forum_post_id","AnimeList","positionNumber","renderUsersAnimeList","addAnimeToListMessage","MangaList","renderUsersMangaList","addMangaToListMessage","MangaSearchPage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","searchReducer","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.21e21eed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.0c039611.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sasuke.29f00131.png\";","import Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport React from 'react'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction AnimeCardByScore({title, id, image}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n                <Tooltip>{title}</Tooltip>\n        }>\n                <Col xs={6} md={2}>\n                        <Card className=\"mainpage-cards bg-dark text-white fluid\"  key={id}>\n                                <Link to={`/anime/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n                        </Card>  \n                </Col>\n                \n        </OverlayTrigger>\n    )\n}\n\nexport default AnimeCardByScore\n","import Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport React from 'react'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction AnimeCardAiring({title, id, image}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n            <Col xs={6} md={2}>\n                <Card className=\"mainpage-cards bg-dark text-white fluid\"  key={id}>\n                    <Link to={`/anime/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n                </Card>  \n            </Col>\n            \n        </OverlayTrigger>\n    )\n}\n\nexport default AnimeCardAiring\n","import Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport React from 'react'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction AnimeCardPopularity({title, id, image}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n        }>\n            <Col xs={6} md={2}>\n                <Card className=\"mainpage-cards bg-dark text-white fluid\"  key={id}>\n                    <Link to={`/anime/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n                </Card>  \n            </Col>\n            \n    </OverlayTrigger>\n    )\n}\n\nexport default AnimeCardPopularity\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction AnimeCardUpcoming({title, image, id}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n            <Col xs={6} md={2}>\n                <Card className=\"mainpage-cards bg-dark text-white fluid\"  key={id}>\n                    <Link to={`/anime/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n                </Card>  \n            </Col>  \n        </OverlayTrigger>\n    )\n}\n\nexport default AnimeCardUpcoming\n","import React from 'react'\nimport ReactLoading from 'react-loading';\n\n\nfunction Loading() {\n    return (\n        <div className=\"loading-component\">\n            <ReactLoading type=\"spin\" color=\"#813AFE\" />\n        </div>\n    )\n}\n\nexport default Loading\n","import {useQuery} from 'react-query'\nimport axios from 'axios'\n\nconst getData = async (url) => {\n  try{\n    return await axios(url)\n  } catch(error){\n    console.log(error.message)\n  } \n}\nexport const useGetData = (url, onSuccess) => {\n  // Adding on url to the  queryKey so that the hook can be called multiple times in a component. This way it caches the data to the right query.\n  return useQuery('getData' + url, () => getData(url), {onSuccess})\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const searchSlice = createSlice ({\n    name: 'search',\n    initialState: {\n        searchQuery: '',\n        searchResults: []\n    },\n    reducers: {\n        updateSearchQuery: (state, action) => {\n            state.searchQuery = action.payload\n        },\n        updateSearchResults: (state, action) => {\n            state.searchResults = action.payload\n        }\n    }\n})\n\nexport const { updateSearchQuery, updateSearchResults } = searchSlice.actions\n\nexport default searchSlice.reducer","import Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport AnimeCardByScore from './Anime/AnimeCardByScore'\nimport AnimeCardAiring from './Anime/AnimeCardAiring'\nimport AnimeCardPopularity from './Anime/AnimeCardPopularity'\nimport AnimeCardUpcoming from './Anime/AnimeCardUpcoming'\nimport React, { useState } from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport {RiSearchLine} from \"react-icons/ri\";\nimport Loading from './Loading'\nimport {useGetData} from '../Hooks/useGetData'\nimport { useDispatch } from 'react-redux'\nimport { updateSearchQuery, updateSearchResults } from '../Redux-Toolkit/search'\nimport axios from 'axios'\n\n\nfunction Homepage() {\n    const [animeSearchQuery, setAnimeSearchQuery] = useState('')\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    // fetching data functions\n\n     // Using aliases to identify each fetches data by name\n     \n     const {data: animeScore, isLoading: animeScoreLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/tv')\n     const {data: animeAiring, isLoading: animeAiringLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/airing')\n     const {data: animePopularity, isLoading: animePopularityLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/bypopularity')\n     const {data: animeUpcoming, isLoading: animeUpcomingLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/upcoming')\n \n     if (animeScoreLoading) return <Loading /> \n     if (animeAiringLoading) return <Loading />\n     if (animePopularityLoading) return <Loading />\n     if (animeUpcomingLoading) return <Loading />\n\n    // Update search\n\n    function handleChange(e) {\n        setAnimeSearchQuery(e.target.value)\n    }\n\n    // Handle a search\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        dispatch(updateSearchQuery(animeSearchQuery))\n        try {\n            let response = await axios(`https://api.jikan.moe/v3/search/anime?q=${animeSearchQuery}&order_by=title&sort=asc&limit=10`)\n            dispatch(updateSearchResults(response.data.results))\n            history.push(`/search/anime`)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    const renderTopAnimeByScoreCards = animeScore.data.top.slice(0,6).map(anime => {  \n      return (<AnimeCardByScore key={anime.mal_id} title={anime.title} id={anime.mal_id} image={anime.image_url}/>)\n    })\n\n    const renderTopAnimeAiring = animeAiring.data.top.slice(0,6).map(anime => {\n        return (<AnimeCardAiring key={anime.mal_id} title={anime.title} id={anime.mal_id} image={anime.image_url}/>)\n    })\n\n    const renderTopAnimeByPopularity = animePopularity.data.top.slice(0,6).map(anime => {\n        return (<AnimeCardPopularity key={anime.mal_id} title={anime.title} id={anime.mal_id} image={anime.image_url}/>)\n    })\n\n    const renderTopUpcomingAnime = animeUpcoming.data.top.slice(0,6).map(anime => {\n        return (<AnimeCardUpcoming key={anime.mal_id} title={anime.title} id={anime.mal_id} image={anime.image_url}/>)\n    })\n\n    return (\n        <>\n            <Container className=\"anime-search\">\n                    <Col style={{width: '22rem'}} className='mx-auto'>\n                        <div className=\"searchbar\">\n                            <input type=\"text\" className=\"search-input\" value={animeSearchQuery} onChange={handleChange} placeholder=\"eg. 'Naruto'\"/>\n                            <a href=\"/#\" onClick={handleSubmit} className=\"search-icon\"><RiSearchLine/></a>\n                        </div>\n                    </Col>\n            </Container>\n\n            <Container fluid=\"md\" className=\"homepage-container\">\n                <p className='headers mt-4'>Top anime by score</p>\n                <Row>\n\n                    {renderTopAnimeByScoreCards}\n\n                    <Container>\n                        <Link to=\"/topanime/score\"><Button className=\"top-list-button\" size=\"md\">See More</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top anime currently airing</p>\n                <Row>\n                    {renderTopAnimeAiring}\n                    <Container>\n                        <Link to=\"/topanime/airing\"><Button className=\"top-list-button\" size=\"md\">See More</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top upcoming anime</p>\n                <Row>\n                    {renderTopUpcomingAnime}\n                    <Container>\n                        <Link to=\"/topanime/upcoming\"><Button className=\"top-list-button\" size=\"md\">See More</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top anime by popularity</p>\n                <Row>\n                    {renderTopAnimeByPopularity}\n                    <Container>\n                        <Link to=\"/topanime/popularity\"><Button className=\"top-list-button\" id=\"bottom-see-more-button-anime\" size=\"md\">See More</Button></Link>\n                    </Container>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Homepage\n","import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport loginIcon from '../../Images/user.svg'\nimport sasuke from '../../Images/Sasuke.png'\nimport {Link, useHistory} from 'react-router-dom'\nimport {useState} from 'react'\nimport React from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport axios from 'axios'\n\n\nfunction Login({setUserIsLoggedIn}) {\n    const [formData, setFormData] = useState({\n        username:\"\",\n        password:\"\"\n    })\n    const [errors, setErrors] = useState([])\n\n    const history = useHistory()\n\n    function handleInput(e) {\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n    async function handleLogin(e) {\n        e.preventDefault()\n        try {\n\n            await axios.post('/login', formData)\n            setUserIsLoggedIn(true)\n            history.push(\"/\")\n        } catch (error) {\n            console.log(\"error.message:\", error.message)\n            console.log(\"error.response:\", error.response)\n            setErrors(error.response.data.message)\n        }\n        \n    }    \n\n    return (\n        <Container className=\"login-container\">\n            <Row>\n                <Col lg={4} md={6} sm={12} className=\"text-center mt-5 p-3\">\n                    <img className=\"icon-img\" src={loginIcon} alt=\"icon\"/>\n                    <Form onSubmit={handleLogin}>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Control type=\"username\" name=\"username\" value={formData.username} onChange={handleInput} placeholder=\"Username\"/>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Control type=\"password\" name=\"password\" value={formData.password} onChange={handleInput} placeholder=\"Password\"/>\n                        </Form.Group>\n                        <div className=\"d-grid gap-2\">\n                        <Button id=\"login-button\" variant=\"btn-block\" type=\"submit\">Login</Button>\n                        </div>\n\n                        <div className=\"signup-link mt-3\">\n                            <p>Don't have an account? <Link to=\"/signup\">Sign up</Link></p>\n                            {history.location.state === undefined ? null : <Alert variant=\"danger\" className=\"forum-post-alert\">You must first login to see this page</Alert>} \n                            {errors.length > 0 ? <Alert variant=\"danger\" className=\"text-center\">{errors.length > 0 ? errors : null }</Alert> : null}       \n                        </div>\n                    </Form>\n                </Col>\n\n                <Col lg={8} md={6} sm={12}>\n                    <img className=\"w-100\" src={sasuke} alt=\"sasuke\" />\n                </Col>\n                \n            </Row>\n        </Container>\n    )\n}\n\nexport default Login\n","import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\nimport axios from 'axios'\n\nfunction SignUp({setUserIsLoggedIn}) {\n    const [formData, setFormData] = useState({\n        username:\"\",\n        password:\"\",\n        password_confirmation:\"\"\n    })\n    const [errors, setErrors] = useState([])\n    const history = useHistory()\n\n    function handleInput(e) {\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            if (formData.password !== formData.password_confirmation) {\n                setErrors([\"Password and Password confirmation do not match\"])\n                return\n            }\n            await axios.post('/signup', formData)\n            setUserIsLoggedIn(true)\n            setFormData({\n                username:\"\",\n                password:\"\",\n                password_confirmation:\"\"\n            })\n            history.push(\"/\")\n        } catch (error) {\n            console.log(\"error:\", error)\n            console.log(\"error data:\", error.response.data.errors)\n            setErrors(error.response.data.errors)\n        }\n    }\n\n\n    return (\n        <Container>\n            <h2 className=\"signup-header\">Create an account</h2>\n            <Form className=\"sign-up-form-container\" onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-2\">\n                        <Form.Label className=\"signup-form-headers\">Username</Form.Label>\n                        <Form.Control type=\"username\" value={formData.username} name=\"username\" onChange={handleInput} placeholder=\"Enter Username\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\n                        <Form.Label className=\"signup-form-headers\">Password</Form.Label>\n                        <Form.Control type=\"password\" value={formData.password} name=\"password\" onChange={handleInput} placeholder=\"Password\" autoComplete=\"on\"/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPasswordConfirmation\">\n                        <Form.Label className=\"signup-form-headers\">Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" value={formData.password_confirmation} name=\"password_confirmation\" onChange={handleInput} placeholder=\"Confirm your password\" autoComplete=\"on\"/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" className=\"signup-button mb-2\">\n                        Submit\n                    </Button>\n                    {errors.length > 0 ? errors.map(err => <Alert key={err} className=\"mt-2\" variant=\"danger\">{err}</Alert>) : null}\n            </Form>\n        </Container>\n    )\n}\n\nexport default SignUp\n","import React, {useState} from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport {useHistory} from 'react-router-dom'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport { RiDiscussFill, RiHome2Fill, RiUser3Fill, RiFileMarkFill} from \"react-icons/ri\";\nimport { FcImport } from \"react-icons/fc\";\nimport axios from 'axios'\n\nfunction NavBar({userIsLoggedIn, setUserIsLoggedIn}) {\n    const [showModal, setShowModal] = useState(false)\n    const history = useHistory()\n\n\n    const logoutUser = async () => {       \n        try{\n            await axios.delete('/logout')\n            setShowModal(false)\n            setUserIsLoggedIn(false)\n            history.push(\"/\")\n        }catch(error) {\n            console.log(error.message)\n        }\n    }\n\n\n    const handleCloseModal = () => setShowModal(false)\n    \n    const handleShowModal = () => {\n        setShowModal(true)\n    }\n\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Container>\n                    <Navbar.Brand href=\"/\" id=\"anime-axis-nav-header\">Anime Axis</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <NavDropdown title={<RiHome2Fill/>}  menuVariant=\"dark\">\n                            <NavDropdown.Item href=\"/\">Anime home</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/manga\">Manga home</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title={<RiDiscussFill />}  menuVariant=\"dark\">\n                            <NavDropdown.Item href=\"/forums/anime\">Anime forum</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/forums/manga\">Manga forum</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/forums/general\">General forum</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title={<RiFileMarkFill/>} menuVariant=\"dark\" >\n                            <NavDropdown.Item href=\"/animelist\">Anime list</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/mangalist\">Manga list</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link href=\"/profile\"><RiUser3Fill /></Nav.Link>\n                        {userIsLoggedIn ? <Nav.Link href=\"\" id=\"logout-button\" onClick={handleShowModal}><FcImport/></Nav.Link> : null}\n                    </Nav>\n                </Container>\n            </Navbar>\n\n            <Modal show={showModal} onHide={handleCloseModal} animation={false} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure you want to logout?</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleCloseModal}>\n                        No\n                    </Button>\n                    <Button variant=\"success\" onClick={logoutUser}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default NavBar\n","import React, {useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport Loading from '../Loading'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Badge from 'react-bootstrap/Badge'\nimport Alert from 'react-bootstrap/Alert'\nimport {useGetData} from '../../Hooks/useGetData'\nimport axios from 'axios'\n\n\nfunction AnimePage({user}) {\n    const params = useParams()\n    const [loginAlertState, setLoginAlertState] = useState(false)\n    const [addedAlertState, setAddedAlertState] = useState(false)\n    const [listButton, setListButton] = useState(false)\n    \n    const onSuccess = (anime) => {\n        if (user && anime) {\n            if (user.data.animes.find(a => a.title === anime.data.title)){\n                setListButton(true)\n                }\n            } \n    }\n\n    const {data: anime, isLoading} = useGetData(`https://api.jikan.moe/v3/anime/${params.id}`, onSuccess)\n\n    if (isLoading) return <Loading />\n\n   async function handleClick() {\n        if (!user) {\n            setLoginAlertState(true)\n        } else {\n            try {\n                let resp = await axios.post('/api/animes', {title: anime.data.title, id: anime.data.mal_id, image_url: anime.data.image_url , score: anime.data.score, user_id: user.id})\n                if (resp.data) {\n                    setListButton(true)\n                    setAddedAlertState(true) \n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n\n    return (\n        <div>\n        <Container className=\"anime-page-container\" >\n            <Row >\n                <Col className=\" anime-cards d-flex justify-content-center h-100\">\n                    <Card style={{ width: '18rem' }} className=\"bg-dark text-white\">\n                        <Card.Img variant=\"top\" src={anime.data.image_url} />\n                        <Card.Body>\n                            <Card.Title>{anime.data.title_english ? anime.data.title_english : anime.data.title}</Card.Title>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroup.Item variant=\"dark\">Rank: {anime.data.rank}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Episodes: {anime.data.episodes ? anime.data.episodes : \"Unknown\"}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Duration: {anime.data.duration}</ListGroup.Item>\n                        </ListGroup>\n                        <Card.Body>\n                            {listButton ? <Button variant=\"success\">Anime in list <span role=\"img\" aria-label=\"checkmark emoji\">✔️</span></Button> : <Button onClick={handleClick} className=\"add-to-anime-list-button\">+ Anime List</Button>}\n                        </Card.Body>\n                        {loginAlertState ? <Alert variant=\"danger\" className=\"anime-page-alert\" onClose={() => setLoginAlertState(false)} dismissible>You must be logged in to add an anime!</Alert> : null}\n                        {addedAlertState ? <Alert variant=\"success\" onClose={() => setAddedAlertState(false)} dismissible>Anime has been added to your list</Alert> : null}\n                    </Card>\n                    \n                </Col>\n                <Col className=\"anime-cards\">\n                   <Card className=\"bg-dark text-white\">\n                   <Card.Body>\n                        <Card.Title>Synopsis</Card.Title>\n                        <Card.Text>\n                            {anime.data.synopsis}\n                        </Card.Text>\n                    </Card.Body>\n                   </Card>\n                   {anime.data.genres.map(g => <Badge key={g.name} pill bg=\"light\" text=\"dark\">{g.name}</Badge>)}\n                </Col>\n                <Col className=\"anime-cards d-flex justify-content-center h-100\">\n                    <Card style={{ width: '18rem' }} className=\"bg-dark text-white\">\n                        <Card.Header>Anime Info</Card.Header>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item variant=\"dark\">Aired: {anime.data.aired.string}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Type: {anime.data.type}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Rank by popularity: {anime.data.popularity}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Producers: {anime.data.producers.map(prod => <li key={prod.name}>{prod.name}</li>) }</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Premiered: {anime.data.premiered}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Rating: {anime.data.rating}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">MyAnimeList Score: {anime.data.score}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Status: {anime.data.status}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Studios: {anime.data.studios.map(studio => <li key={studio.name}>{studio.name}</li>)}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Japanese Title: {anime.data.title_japanese}</ListGroup.Item>\n                            <ListGroup.Item variant=\"dark\">Synonyms: {anime.data.title_synonyms.map(syn => <li key={syn}>{syn}</li>)}</ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n    )\n}\n\nexport default AnimePage\n","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Row from 'react-bootstrap/Row'\nimport loginIcon from '../../Images/user.svg'\nimport Button from 'react-bootstrap/Button'\nimport { Redirect } from 'react-router-dom'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\nimport axios from 'axios'\nimport { useMutation, useQueryClient } from 'react-query'\n\nfunction ProfilePage({user}) {\n    const [showBioModal, setShowBioModal] = useState(false);\n    const [showAvatarModal, setShowAvatarModal] = useState(false)\n    const [avatarModalValue, setAvatarModalValue] = useState(\"\")\n    const [bioModalTextValue, setBioModalTextValue] = useState(\"\")\n    const [bioAlertState, setBioAlertState] = useState(false)\n    const [avatarAlertState, setAvatarAlertState] = useState(false)\n    const queryClient = useQueryClient()\n\n    const updateBio = useMutation(editBio => {\n        return axios.patch(`/users/${user.data.id}`, editBio)\n    }, {onSuccess: (data) => {\n            queryClient.setQueryData('getData/user', data)\n            setShowBioModal(false)\n            setBioModalTextValue(\"\")\n            setBioAlertState(true)\n            },\n        onError: (error) => console.log(error.message)\n        }\n    )\n\n    const updateAvatar = useMutation(editAvatar => {\n        return axios.patch(`/users/${user.data.id}`, editAvatar)\n    }, {\n        onSuccess: data => {\n            console.log(\"Data in onSuccess:\", data)\n            queryClient.setQueryData('getData/user', data)\n            setShowAvatarModal(false)\n            setAvatarModalValue(\"\")\n            setAvatarAlertState(true)\n        },\n        onError: error => console.log(error.message)\n    })\n\n\n    const handleCloseBio = () => {\n        setShowBioModal(false)\n        setBioModalTextValue(\"\")\n    }\n\n    const handleShowBio = () => setShowBioModal(true)\n\n\n    const handleCloseAvatar = () => {\n        setShowAvatarModal(false)\n        setAvatarModalValue(\"\")\n    }\n\n    const handleShowAvatar = () => setShowAvatarModal(true)\n\n\n    function handleEditBio() {\n        updateBio.mutate({bio: bioModalTextValue || user.data.bio})\n    }\n\n    function handleEditAvatar() {\n        updateAvatar.mutate({avatar: avatarModalValue || user.data.avatar})\n    }\n\n    if (!user) return <Redirect to=\"/login\"/>  \n\n\n    return (\n        <Container className=\"profile-container\">\n            <Row className=\"d-flex justify-content-center\"> \n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src={user.data.avatar ? user.data.avatar : loginIcon} id=\"profile-icon\" alt=\"profile-icon\" />\n                    <Card.Body>\n                        <Card.Title>{user.data.username}</Card.Title>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">                \n                        <ListGroup.Item> <strong>Bio:</strong> {user.data.bio ? user.data.bio : null}</ListGroup.Item>\n                    </ListGroup>\n                </Card>\n                <div className=\"d-grid gap-2 mt-2 justify-content-center\">\n                    {user.data.bio ? <Button variant=\"primary\" size=\"sm\" style={{width: '18rem'}} onClick={handleShowBio} className=\"profile-buttons\">Update bio</Button> : <Button variant=\"primary\" size=\"sm\" style={{width: '18rem'}} onClick={handleShowBio} className=\"profile-buttons\">Add bio</Button>}\n                    {user.data.avatar ? <Button variant=\"primary\" size=\"sm\" style={{width: '18rem'}} onClick={handleShowAvatar} className=\"profile-buttons\">Update avatar</Button> : <Button variant=\"primary\" size=\"sm\" style={{width: '18rem'}} onClick={handleShowAvatar} className=\"profile-buttons\">Add avatar</Button>}\n\n                    {bioAlertState ? <Alert variant=\"success\" className=\"text-center\" onClose={() => setBioAlertState(false)} dismissible>Bio has been updated</Alert> : null}\n                    {avatarAlertState ? <Alert variant=\"success\" className=\"text-center\" onClose={() => setAvatarAlertState(false)} dismissible>Avatar has been updated</Alert> : null}\n                </div>\n            </Row>\n\n            <Modal show={showBioModal} onHide={handleCloseBio} animation={false} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Bio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body as=\"textarea\" value={bioModalTextValue} onChange={(e) => setBioModalTextValue(e.target.value)}></Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseBio}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleEditBio}>\n                        Submit\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showAvatarModal} onHide={handleCloseAvatar} animation={false} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Enter URL for avatar image (Some URL's may not render the image due to Cross Origin Read Blocking)</Modal.Title>\n                </Modal.Header>\n                <Modal.Body as=\"textarea\" value={avatarModalValue} onChange={(e) => setAvatarModalValue(e.target.value)}></Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseAvatar}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleEditAvatar}>\n                        Submit\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default ProfilePage\n\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction MangaCardByPopularity({title, image, id}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n        <Col xs={6} md={2}>\n            <Card className=\"bg-dark text-white mainpage-cards\"  key={id}>\n                <Link to={`/manga/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n            </Card>  \n        </Col>\n        </OverlayTrigger>\n    )\n}\n\nexport default MangaCardByPopularity\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction MangaCardByScore({title, image, id}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n        <Col xs={6} md={2}>\n            <Card className=\"bg-dark text-white mainpage-cards\"  key={id}>\n                <Link to={`/manga/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n            </Card>  \n        </Col>\n        </OverlayTrigger>\n    )\n}\n\nexport default MangaCardByScore\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction MangaCardNovels({title, image, id}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n        <Col xs={6} md={2}>\n            <Card className=\"bg-dark text-white mainpage-cards\"  key={id}>\n                <Link to={`/manga/${id}`}><Card.Img className=\"mainpage-card-images\" src={image} alt=\"Card image\" /></Link>\n            </Card>  \n        </Col>\n        </OverlayTrigger>\n    )\n}\n\nexport default MangaCardNovels\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction MangaCardOneShots({title, image, id}) {\n    return (\n        <OverlayTrigger placement=\"top\" overlay={\n            <Tooltip>{title}</Tooltip>\n    }>\n        <Col xs={6} md={2}>\n            <Card className=\"bg-dark text-white mainpage-cards\"  key={id}>\n                <Link to={`/manga/${id}`}><Card.Img className=\"mainpage-cards\" src={image} alt=\"Card image\" /></Link>\n            </Card>  \n        </Col>\n        </OverlayTrigger>\n    )\n}\n\nexport default MangaCardOneShots\n","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport MangaCardByPopularity from './MangaCardByPopularity'\nimport MangaCardByScore from './MangaCardByScore'\nimport MangaCardNovels from './MangaCardNovels'\nimport MangaCardOneShots from './MangaCardOneShots'\nimport { Link, useHistory } from 'react-router-dom'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport { RiSearchLine } from \"react-icons/ri\";\nimport Loading from '../Loading'\nimport { useGetData } from '../../Hooks/useGetData'\nimport { useDispatch } from 'react-redux'\nimport { updateSearchQuery, updateSearchResults } from '../../Redux-Toolkit/search'\nimport axios from 'axios'\n\nfunction MangaHome() {\n    const [mangaSearchQuery, setMangaSearchQuery] = useState('')\n    const history = useHistory()\n    const dispatch = useDispatch() \n\n    // fetching data functions\n\n     // Using aliases to identify each fetches data by name\n     \n     const {data: mangaScore, isLoading: mangaScoreLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/manga')\n     const {data: mangaOneShots, isLoading: mangaOneShotsLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/oneshots')\n     const {data: mangaPopularity, isLoading: mangaPopularityLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/bypopularity')\n     const {data: mangaNovels, isLoading: mangaNovelsLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/novels')\n \n     if (mangaScoreLoading) return <Loading /> \n     if (mangaOneShotsLoading) return <Loading />\n     if (mangaPopularityLoading) return <Loading />\n     if (mangaNovelsLoading) return <Loading />\n\n    // update search state\n\n    function handleChange(e) {\n        setMangaSearchQuery(e.target.value)\n    }\n\n    // Handle a search\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        dispatch(updateSearchQuery(mangaSearchQuery))\n        try {\n            let response = await axios(`https://api.jikan.moe/v3/search/manga?q=${mangaSearchQuery}&order_by=title&sort=asc&limit=10`)\n            dispatch(updateSearchResults(response.data.results))\n            history.push(`/search/manga`)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    const renderMangaByScore = mangaScore.data.top.slice(0,6).map(manga => {\n        return (<MangaCardByScore key={manga.mal_id} title={manga.title} image={manga.image_url} id={manga.mal_id} />)\n    })\n\n    const renderMangaOneShots = mangaOneShots.data.top.slice(0,6).map(manga => {\n        return (<MangaCardOneShots key={manga.mal_id} title={manga.title} image={manga.image_url} id={manga.mal_id} />)\n    })    \n\n    const renderMangaByPopularity = mangaPopularity.data.top.slice(0,6).map(manga => {\n        return (<MangaCardByPopularity key={manga.mal_id} title={manga.title} image={manga.image_url} id={manga.mal_id} />)\n    })\n\n    const renderMangaNovels = mangaNovels.data.top.slice(0,6).map(manga => {\n        return (<MangaCardNovels key={manga.mal_id} title={manga.title} image={manga.image_url} id={manga.mal_id} />)\n    })\n\n\n\n    return (\n        <>\n            <Container className=\"manga-search\">\n                <Col style={{width: '22rem'}} className='mx-auto'>\n                    <div className=\"searchbar\">\n                        <input type=\"text\" className=\"search-input\" value={mangaSearchQuery} onChange={handleChange} placeholder=\"eg. 'Tokyo Ghoul'\"/>\n                        <a href=\"/#\" onClick={handleSubmit} className=\"search-icon\"><RiSearchLine/></a>\n                    </div>\n                </Col>\n            </Container>\n            <Container fluid=\"md\" className=\"manga-homepage-container\">\n                <p className='headers mt-4'>Top manga by score</p>\n                <Row>\n                    {renderMangaByScore}\n                    <Container>\n                        <Link to=\"/topmanga/score\"><Button className=\"top-list-button\" size=\"md\">See more</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top manga one-shots</p>\n                <Row>\n                    {renderMangaOneShots}\n                    <Container>\n                        <Link to=\"/topmanga/oneshots\"><Button className=\"top-list-button\" size=\"md\">See more</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top manga by popularity</p>\n                <Row>\n                    {renderMangaByPopularity}\n                    <Container>\n                        <Link to=\"/topmanga/popularity\"><Button className=\"top-list-button\" size=\"md\">See more</Button></Link>\n                    </Container>\n                </Row>\n                <p className='headers mt-4'>Top manga novels</p>\n                <Row>\n                    {renderMangaNovels}\n                    <Container>\n                        <Link to=\"/topmanga/novels\"><Button className=\"top-list-button\" id=\"bottom-see-more-button-manga\" size=\"md\">See more</Button></Link>\n                    </Container>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default MangaHome\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useState } from 'react'\nimport Loading from '../Loading'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Badge from 'react-bootstrap/Badge'\nimport Alert from 'react-bootstrap/Alert'\nimport { useGetData } from '../../Hooks/useGetData'\nimport axios from 'axios'\n\n\nfunction MangaPage({user}) {\n    const params = useParams()\n    const [loginAlertState, setLoginAlertState] = useState(false)\n    const [addedAlertState, setAddedAlertState] = useState(false)\n    const [listButton, setListButton] = useState(false)\n\n\n    const onSuccess = (manga) => {\n        if (user && manga) {\n            if (user.data.mangas.find(m => m.title === manga.data.title)){\n                setListButton(true)\n                }\n            } \n    }\n\n    const {data: manga, isLoading} = useGetData(`https://api.jikan.moe/v3/manga/${params.id}`, onSuccess)\n\n    if (isLoading) return <Loading />    \n\n\n    async function handleClick() {\n        if (!user) {\n            setLoginAlertState(true)\n        } else {\n            try {\n                let resp = await axios.post('/api/mangas', {title: manga.data.title, id: manga.data.mal_id, image_url: manga.data.image_url , score: manga.data.score, user_id: user.id})\n                if (resp.data) {\n                    setListButton(true)\n                    setAddedAlertState(true) \n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    return (\n        <div>\n            <Container className=\"manga-page-container\">\n                <Row>\n                    <Col med={4} className=\"d-flex justify-content-center mb-2 h-100\">\n                        <Card style={{ width: '18rem'}} className=\"bg-dark text-white \">\n                            <Card.Img variant=\"top\" src={manga.data.image_url} />\n                            <Card.Body>\n                                <Card.Title>{manga.data.title_english ? manga.data.title_english : manga.data.title}</Card.Title>\n                            </Card.Body>\n                            <ListGroup className=\"list-group-flush\">\n                                <ListGroup.Item variant=\"dark\">Rank:  {manga.data.rank}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Chapters:  {manga.data.chapters ? manga.data.chapters : \"Unknown\"}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Volumes:  {manga.data.volumes}</ListGroup.Item>\n                            </ListGroup>\n                            <Card.Body>\n                            {listButton ? <Button variant=\"success\">Manga in list <span role=\"img\" aria-label=\"checkmark emoji\">✔️</span></Button> : <Button onClick={handleClick} className=\"add-to-manga-list-button\">+ Manga List</Button>}\n                            </Card.Body>\n                            {loginAlertState ? <Alert variant=\"danger\" className=\"manga-page-alert\" onClose={() => setLoginAlertState(false)} dismissible>You must be logged in to add a manga!</Alert> : null}\n                            {addedAlertState ? <Alert variant=\"success\" onClose={() => setAddedAlertState(false)} dismissible>Manga has been added to your list</Alert> : null}\n                        </Card>\n                    </Col>\n                \n\n                \n                    <Col med={4}>\n                        <Card className=\"bg-dark text-white\">\n                            <Card.Body>\n                                <Card.Title>Synopsis</Card.Title>\n                                <Card.Text>\n                                    {manga.data.synopsis}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                        {manga.data.genres.map(g => <Badge key={g.name} pill bg=\"light\" text=\"dark\">{g.name}</Badge>)}\n\n                        <Card id=\"manga-background-card\" className=\"bg-dark text-white mb-2\"> \n                            <Card.Body>\n                                <Card.Title>Background</Card.Title>\n                                <Card.Text>\n                                    {manga.data.background}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    <Col med={4} className=\"d-flex justify-content-center mb-2 h-100\">\n                        <Card style={{ width: '18rem' }} className=\"bg-dark text-white \">\n                            <Card.Header>Manga Info</Card.Header>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item variant=\"dark\">Published: {manga.data.published.string}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Type:  {manga.data.type}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Authors:  {manga.data.authors.map(author => <li key={author.name}>{author.name}</li>)}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Rank by popularity:  {manga.data.popularity}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Serializations:  {manga.data.serializations.map(s => <li key={s.name}>{s.name}</li>)}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">MyAnimeList Score:  {manga.data.score}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Status:  {manga.data.status}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Japanese Title:  {manga.data.title_japanese}</ListGroup.Item>\n                                <ListGroup.Item variant=\"dark\">Synonyms:  {manga.data.title_synonyms.map(syn => <li key={syn}>{syn}</li>)}</ListGroup.Item>\n                            </ListGroup>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default MangaPage\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopAnimeUpcomingList() {\n\n    const {data: anime, isLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/upcoming')\n\n    if (isLoading) return <Loading />\n\n    const renderTopAnimeUpcomingList = anime.data.top.map(anime => {\n        return ( \n            <tr key={anime.mal_id}>\n                <td>\n                    {anime.rank}\n                </td>\n                <td>\n                    <Link to={`/anime/${anime.mal_id}`}>\n                        <img src={anime.image_url} alt=\"anime art\"/>      \n                    </Link>\n                    {anime.title}\n                </td>\n                <td>\n                    {anime.score}\n                </td>   \n            </tr>\n        )\n    })\n\n    return (\n        <Container className=\"top-anime-upcoming-list\">\n            <header>\n                <h1>Top 50 upcoming anime</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopAnimeUpcomingList}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopAnimeUpcomingList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopAnimeByPopularityList() {\n\n    const {data: anime, isLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/bypopularity')\n\n    if (isLoading) return <Loading />\n\n    const renderTopAnimeByPopularityList = anime.data.top.map(anime => {\n        return (\n            <tr key={anime.mal_id}>\n                <td>\n                    {anime.rank}\n                </td>\n                <td>\n                    <Link to={`/anime/${anime.mal_id}`}>\n                        <img src={anime.image_url} alt=\"anime art\"/>\n                        \n                    </Link>\n                    {anime.title}\n                </td>\n                <td>\n                    {anime.score}\n                </td>\n            </tr>\n        )\n    })\n    return (\n        <Container className=\"top-anime-popularity-list\">\n            <header>\n                <h1>Top 50 anime by popularity</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopAnimeByPopularityList}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopAnimeByPopularityList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopAnimeAiringList() {\n\n    const {data: anime, isLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/airing')\n\n    if (isLoading) return <Loading />\n\n    const renderTopAnimeAiringList = anime.data.top.map(anime => {\n        return (\n            <tr key={anime.mal_id}>\n                <td>\n                    {anime.rank}\n                </td>\n                <td>\n                    <Link to={`/anime/${anime.mal_id}`}>\n                        <img src={anime.image_url} alt=\"anime art\"/>\n                        \n                    </Link>\n                    {anime.title}\n                </td>\n                <td>\n                    {anime.score}\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <Container className=\"top-anime-airing-list\">\n            <header>\n                <h1>Top 50 anime currently airing</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopAnimeAiringList}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopAnimeAiringList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopAnimeByScoreList() {\n\n    const {data: anime, isLoading} = useGetData('https://api.jikan.moe/v3/top/anime/1/tv')\n\n    if (isLoading) return <Loading />\n\n    const renderTopAnimeByScore = anime.data.top.map(anime => {\n        return (      \n            <tr key={anime.mal_id}>\n                <td>\n                    {anime.rank}\n                </td>\n                <td>\n                    <Link to={`/anime/${anime.mal_id}`}>\n                        <img src={anime.image_url} alt=\"anime art\"/>\n                        \n                    </Link>\n                    {anime.title}\n                </td>\n                <td>\n                    {anime.score}\n                </td>\n            </tr>\n            \n        )\n    })\n\n    return (\n<Container className=\"top-anime-score-list\">\n            <header>\n                <h1>Top 50 anime by score</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopAnimeByScore}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopAnimeByScoreList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopMangaNovelsList() {\n    const {data: manga, isLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/novels')\n\n    if (isLoading) return <Loading />\n\n    const renderTopMangaNovels = manga.data.top.map(manga => {\n        return (\n            \n            <tr key={manga.mal_id}>\n                <td>\n                    {manga.rank}\n                </td>\n                <td>\n                    <Link to={`/manga/${manga.mal_id}`}>\n                        <img src={manga.image_url} alt=\"manga art\"/>\n                        \n                    </Link>\n                    {manga.title}\n                </td>\n                <td>\n                    {manga.score}\n                </td>\n            </tr>\n            \n        )\n    })\n\n    return (\n        <Container className=\"top-manga-novels-list\">\n            <header>\n                <h1>Top 50 manga novels</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopMangaNovels}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopMangaNovelsList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopMangaByPopularityList() {\n    const {data: manga, isLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/bypopularity')\n\n    if (isLoading) return <Loading />\n\n\n    const renderTopMangaByPopularity = manga.data.top.map(manga => {\n        return (\n            \n            <tr key={manga.mal_id}>\n                <td>\n                    {manga.rank}\n                </td>\n                <td>\n                    <Link to={`/manga/${manga.mal_id}`}>\n                        <img src={manga.image_url} alt=\"manga art\"/>\n                        \n                    </Link>\n                    {manga.title}\n                </td>\n                <td>\n                    {manga.score}\n                </td>\n            </tr>\n            \n        )\n    })\n\n    return (\n        <Container className=\"top-manga-popularity-list\">\n            <header>\n                <h1>Top 50 manga by popularity</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopMangaByPopularity}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopMangaByPopularityList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopMangaByScoreList() {\n    const {data: manga, isLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/manga')\n\n    if (isLoading) return <Loading />\n\n    const renderTopMangaByScore = manga.data.top.map(manga => {\n        return (\n            <tr key={manga.mal_id}>\n                <td>\n                    {manga.rank}\n                </td>\n                <td>\n                    <Link to={`/manga/${manga.mal_id}`}>\n                        <img src={manga.image_url} alt=\"manga art\"/>\n                        \n                    </Link>\n                    {manga.title}\n                </td>\n                <td>\n                    {manga.score}\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <Container className=\"top-manga-score-list\">\n            <header>\n                <h1>Top 50 manga by score</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopMangaByScore}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopMangaByScoreList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction TopMangaOneShotsList() {\n    const {data: manga, isLoading} = useGetData('https://api.jikan.moe/v3/top/manga/1/oneshots')\n\n    if (isLoading) return <Loading />\n\n    const renderTopMangaOneShots = manga.data.top.map(manga => {\n        return (\n            <tr key={manga.mal_id}>\n                <td>\n                    {manga.rank}\n                </td>\n                <td>\n                    <Link to={`/manga/${manga.mal_id}`}>\n                        <img src={manga.image_url} alt=\"manga art\"/>\n                        \n                    </Link>\n                    {manga.title}\n                </td>\n                <td>\n                    {manga.score}\n                </td>\n            </tr>  \n        )\n    })\n\n    return (\n        <Container className=\"top-manga-oneshots-list\">\n            <header>\n                <h1>Top 50 manga one-shots</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTopMangaOneShots}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default TopMangaOneShotsList\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {RiSearchLine} from \"react-icons/ri\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateSearchQuery, updateSearchResults } from '../../Redux-Toolkit/search'\nimport Loading from '../Loading'\n\n\nfunction AnimeSearchPage() {\n    const [animeSearchQuery, setAnimeSearchQuery] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const { searchQuery } = useSelector(state => state.search)\n    const { searchResults } = useSelector(state => state.search)\n    const dispatch = useDispatch()\n\n\n    const handleChange = (e) => {\n        setAnimeSearchQuery(e.target.value)\n    }\n\n    const handleSearch = async () => {\n        setIsLoading(true)\n        dispatch(updateSearchQuery(animeSearchQuery))\n        dispatch(updateSearchResults([]))\n        let response = await axios(`https://api.jikan.moe/v3/search/anime?q=${animeSearchQuery}&order_by=title&sort=asc&limit=10`)\n        setIsLoading(false)\n        dispatch(updateSearchResults(response.data.results))\n        setAnimeSearchQuery(\"\")\n    }\n\n    const renderResults = searchResults.map(anime => (\n        <OverlayTrigger key={anime.mal_id} placement=\"top\" overlay={\n            <Tooltip>{anime.title}</Tooltip>}>\n            <Col xs={6} sm={2} med={4}>\n                <Card className='mainpage-cards search-cards'>\n                    <Link to={`/anime/${anime.mal_id}`}><Card.Img className='mainpage-card-images' variant=\"top\" src={anime.image_url} /></Link>\n                </Card> \n            </Col>\n        </OverlayTrigger>\n    ))\n\n    return (\n        <div>\n            <Container className=\"anime-search\">\n                <Col style={{width: '22rem'}} className='mx-auto'>\n                    <div className=\"searchbar\">\n                        <input type=\"text\" className=\"search-input\" value={animeSearchQuery} onChange={handleChange} placeholder=\"eg. 'Naruto'\"/>\n                        <a onClick={handleSearch} className=\"search-icon\"><RiSearchLine/></a>\n                    </div>\n                </Col>\n\n                <h1 className=\"mt-5\">Showing results for: {searchQuery}</h1>\n            </Container>\n            <Container >\n                <Row> \n                    {renderResults}\n                    {isLoading ? <Loading /> : null}\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default AnimeSearchPage\n\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport {useHistory, Link} from 'react-router-dom'\nimport {useGetData} from '../../Hooks/useGetData'\nimport Loading from '../Loading'\n\nfunction AnimeForum({user}) {\n    const history = useHistory()\n\n    const { data: animePosts, isLoading } = useGetData('https://anime-axis-api.herokuapp.com/forum_posts/anime')\n\n    if (isLoading) return <Loading />\n\n\n    function handleClick() {\n        if (user) {\n            history.push(\"/forums/newpost\")\n        } else {\n            // Passing current page as props for rendering error on login page\n            // Adding state of the current page\n            history.push(\"/login\", {from: \"anime forum\"})\n        }\n    }\n    \n    const renderAnimePosts = animePosts.data.map(a => (  \n            <tr key={a.id}>\n                <td>\n                <Link to={`/forums/post/${a.id}`}>{a.title}</Link>\n                    <br/>\n                    {a.user.username} - {a.post_time}\n                </td>\n                <td>{a.number_of_comments}</td>\n            </tr>\n        )\n    )\n\n    return (\n        <Container className=\"anime-forum-container\">\n            <h1>Anime Forum Board</h1>\n           <Button onClick={handleClick} className=\"create-forum-post-button\">Create New Post</Button>\n            \n            <Table striped bordered hover className=\"anime-forum-table\">\n                <thead>\n                    <tr>\n                    <th>Post</th>\n                    <th>Comments</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {renderAnimePosts}\n                </tbody>\n            </Table>\n        </Container>\n    )\n} \n\nexport default AnimeForum\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport {useHistory, Link} from 'react-router-dom'\nimport Loading from '../Loading'\nimport {useGetData} from '../../Hooks/useGetData'\n\n\nfunction GeneralForum({user}) {\n    const history = useHistory()\n\n    const { data: generalPosts, isLoading } = useGetData('/api/forum_posts/general')\n\n    if (isLoading) return <Loading />\n\n    function handleClick() {\n        if (user) {\n            history.push(\"/forums/newpost\", {from: \"general forum\"})\n        } else {\n            // Passing current page as props for rendering error on login page\n            // Adding state of the current page\n            history.push(\"/login\", {from: \"general forum\"})\n        }\n    }\n\n    const renderGeneralPosts = generalPosts.data.map(g => (\n            <tr key={g.id}>\n                <td>\n                <Link to={`/forums/post/${g.id}`}>{g.title}</Link>\n                    <br/>\n                    {g.user.username} - {g.post_time}\n                </td>\n                <td>{g.number_of_comments}</td>\n            </tr>\n        )   \n    )\n\n    return (\n        <Container className=\"general-forum-container\">\n            <h1>General Forum Board</h1>\n            <Button onClick={handleClick} className=\"create-forum-post-button\">Create New Post</Button>\n            \n            <Table striped bordered hover className=\"general-forum-table\">\n                <thead>\n                    <tr>\n                    <th>Post</th>\n                    <th>Comments</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {renderGeneralPosts}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default GeneralForum\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport {useHistory, Link} from 'react-router-dom'\nimport Loading from '../Loading'\nimport {useGetData} from '../../Hooks/useGetData'\n\nfunction MangaForum({user}) {\n    const history = useHistory()\n\n    const { data: mangaPosts, isLoading } = useGetData('/api/forum_posts/general')\n\n    if (isLoading) return <Loading />\n\n    function handleClick() {\n        if (user) {\n            history.push(\"/forums/newpost\", {from: \"manga forum\"})\n        } else {\n            // Passing current page as props for rendering error on login page\n            // Adding state of the current page\n            history.push(\"/login\", {from: \"manga forum\"})\n        }\n    }\n\n    const renderMangaPosts = mangaPosts.data.map(m => (\n            <tr key={m.id}>\n                <td>\n                <Link to={`/forums/post/${m.id}`}>{m.title}</Link>\n                    <br/>\n                    {m.user.username} - {m.post_time}\n                </td>\n                <td>{m.number_of_comments}</td>\n            </tr>\n        )   \n    )\n\n    return (\n        <Container className=\"manga-forum-container\">\n            <h1>Manga Forum Board</h1>\n            <Button onClick={handleClick} className=\"create-forum-post-button\">Create New Post</Button>\n            \n            <Table striped bordered hover className=\"manga-forum-table\">\n                <thead>\n                    <tr>\n                    <th>Post</th>\n                    <th>Comments</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {renderMangaPosts}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default MangaForum\n","import React, {useState, useEffect} from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\n\nfunction ForumPostForm({user}) {\n    const [formData, setFormData] = useState({\n        title:\"\",\n        content:\"\"\n    })\n    const [forumIdState, setForumIdState] = useState(1)\n    const history = useHistory()\n\n\n    function handleChange(e) {\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n    // Use the location state to provide the correct forum id for the backend when creating a new forum post\n    useEffect(() => {\n        if (!history.location.state) {\n            setForumIdState(1)\n        } else if (history.location.state.from === \"manga forum\") {\n            setForumIdState(2)\n        } else if (history.location.state.from === \"general forum\"){\n            setForumIdState(3)\n        }\n    }, [history.location.state])\n\n\n\n    async function handleSubmit(e){\n        e.preventDefault()\n        let response = await axios.post('/api/forum_posts', {title: formData.title, content: formData.content, forum_id: forumIdState, user_id: user.data.id})\n        setFormData({title:\"\", content:\"\"})\n        history.push(`/api/forums/post/${response.data.id}`)\n    }\n\n    return (\n        <Container className=\"forum-post-form-container\">\n            <Form onSubmit={handleSubmit} >\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Post title</Form.Label>\n                    <Form.Control type=\"text\" onChange={handleChange} name=\"title\" value={formData.title} placeholder=\"Why did the chicken cross the road?\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Post content</Form.Label>\n                    <Form.Control as=\"textarea\" onChange={handleChange} name=\"content\" value={formData.content} rows={3} placeholder=\"To get home and watch some anime obviously!\"/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" className=\"forum-post-submit-button\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default ForumPostForm\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nfunction Comment({content, time, username}) {\n    return (\n        <Card className=\"mt-2\">\n            <Card.Header>By {username}</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {content}\n                    </Card.Text>\n                </Card.Body>\n            <Card.Footer className=\"text-muted\">{time}</Card.Footer>\n        </Card>\n    )\n}\n\nexport default Comment\n","import React, {useState} from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport {useParams} from 'react-router-dom'\nimport Loading from '../Loading'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\nimport Comment from './Comment'\nimport {useGetData} from '../../Hooks/useGetData'\nimport axios from 'axios'\nimport { useMutation, useQueryClient } from 'react-query'\n\nfunction ForumPost({user}) {\n    const params = useParams()\n    const [show, setShow] = useState(false);\n    const [modalTextValue, setModalTextValue] = useState(\"\")\n    const [alertState, setAlertState] = useState(false)\n    const queryClient = useQueryClient()\n\n    const postNewComment = useMutation(addNewComment => {\n        return axios.post('/api/comments', addNewComment)\n    }, {onSuccess: (data) => {\n            queryClient.setQueryData(`getData/api/comments/${params.id}`, (oldQueryData) => {\n                return {\n                    ...oldQueryData,\n                    data: [...oldQueryData.data, data.data]\n                }\n            })\n            setModalTextValue(\"\")\n            setShow(false)\n        }\n    }) \n\n    const { data: comments, isLoading: commentsIsLoading } = useGetData(`/api/comments/${params.id}`)\n    const { data: forumPost, isLoading: forumPostIsLoading } = useGetData(`/api/forum_posts/${params.id}`)\n\n    if (forumPostIsLoading) return <Loading />\n    if (commentsIsLoading) return <Loading />\n\n\n    const handleClose = () => setShow(false);\n    function handleShow() {\n        if (user) {\n            setShow(true)\n        } else {\n            setAlertState(true)\n        }\n    } \n\n\n    const renderComments = comments.data.map(c => (\n        <Comment key={c.id} content={c.content} time={c.comment_time} username={c.user.username}/>\n    ))\n\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        postNewComment.mutate({content: modalTextValue, forum_post_id: forumPost.data.id, user_id: user.data.id})\n    }\n\n\n    return (\n        <div>\n            <Container className=\"forum-post-container\">\n                <Button onClick={handleShow} className=\"comment-button\">Comment on post</Button>\n                {alertState ? <Alert variant=\"danger\" className=\"forum-post-alert\" onClose={() => setAlertState(false)} dismissible>You must first login to comment</Alert> : null}\n                <Card className=\"forum-post-card\" border=\"dark\">\n                    <Card.Header>By {forumPost.data.user.username}</Card.Header>\n                    <Card.Body>\n                        <Card.Title>{forumPost.data.title}</Card.Title>\n                        <Card.Text>\n                            {forumPost.data.content}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\">{forumPost.post_time}</Card.Footer>\n                </Card>\n            </Container>\n\n            <Container className=\"comments-container\"> \n                {renderComments}      \n            </Container>\n\n            <Modal show={show} onHide={handleClose} animation={false} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Comment</Modal.Title>\n                </Modal.Header>\n                <Modal.Body as=\"textarea\" value={modalTextValue} onChange={(e) => setModalTextValue(e.target.value)}></Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className=\"comment-submit-button\">\n                        Post Comment\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ForumPost\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link} from 'react-router-dom'\nimport {Redirect} from 'react-router-dom'\n\nfunction AnimeList({user}) {\n\n    // Guard clause for returning jsx of undefined properties (user.username)\n    if (!user) return <Redirect to=\"/login\" />\n\n\n    let positionNumber = 0\n\n    const renderUsersAnimeList = () => {\n        if (user.data.animes.length > 0) {\n           return user.data.animes.map(a => (\n               <tr key={a.id}>\n                    <td>\n                        {positionNumber +=1}\n                    </td>\n                    <td>  \n                        <Link to={`/anime/${a.id}`}>\n                            <img src={a.image_url} alt=\"anime art\"/>\n                        </Link>\n                        <div >{a.title}</div>\n                    </td>\n                    <td>\n                        {a.score}\n                    </td>\n                </tr>\n            ))\n        }\n    }\n\n    const addAnimeToListMessage = () => {\n        if (user.data.animes.length === 0) {\n            return <h2>There are no anime in your list. Go add some!</h2>\n        } \n    }\n\n    return (\n        <Container className=\"users-anime-list\">\n            <header>\n                <h1>{user.data.username} anime list</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderUsersAnimeList()}\n                </tbody>\n            </Table>\n            {addAnimeToListMessage()}\n        </Container>\n    )\n}\n\nexport default AnimeList\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport {Link, Redirect} from 'react-router-dom'\n\n\nfunction MangaList({user}) {\n\n    // Guard clause for returning jsx of undefined properties (user.username)\n    if (!user) return <Redirect to=\"/login\" />\n\n    let positionNumber = 0\n\n    const renderUsersMangaList = () => {\n        if (user.data.mangas.length > 0) {\n           return user.data.mangas.map(m => (\n                <tr key={m.id}>\n                    <td>\n                        {positionNumber +=1}\n                    </td>\n                    <td>   \n                        <Link to={`/manga/${m.id}`}>\n                            <img src={m.image_url} alt=\"manga art\"/>\n                        </Link>\n                        {m.title}  \n                    </td>\n                    <td>\n                        {m.score}\n                    </td>\n                </tr>\n            ))\n        }\n    }\n\n    const addMangaToListMessage = () => {\n        if (user.data.mangas.length === 0) {\n            return <h2>There are no manga in your list. Go add some!</h2>\n        } \n    }\n\n\n    return (\n\n        <Container className=\"users-manga-list\">    \n            <header>\n                <h1>{user.data.username} manga list</h1>\n            </header>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderUsersMangaList()}\n                </tbody>\n            </Table>\n            {addMangaToListMessage()}\n        </Container>\n    )\n}\n\nexport default MangaList\n","import React, {useState} from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom'\nimport {RiSearchLine} from \"react-icons/ri\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'   \nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateSearchQuery, updateSearchResults } from '../../Redux-Toolkit/search'\nimport Loading from '../Loading'\n\nfunction MangaSearchPage() {\n    const [mangaSearchQuery, setMangaSearchQuery] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const dispatch = useDispatch()\n    const { searchQuery } = useSelector(state => state.search)\n    const { searchResults } = useSelector(state => state.search)\n\n    function handleChange(e) {\n        setMangaSearchQuery(e.target.value)\n    }\n\n    const handleSearch = async () => {\n        setIsLoading(true)\n        dispatch(updateSearchQuery(mangaSearchQuery))\n        dispatch(updateSearchResults([]))\n        let response = await axios(`https://api.jikan.moe/v3/search/manga?q=${mangaSearchQuery}&order_by=title&sort=asc&limit=10`)\n        setIsLoading(false)\n        dispatch(updateSearchResults(response.data.results))\n        setMangaSearchQuery(\"\")\n    }\n\n\n    const renderResults = searchResults.map(m => (\n        <OverlayTrigger key={m.mal_id} placement=\"top\" overlay={\n            <Tooltip>{m.title}</Tooltip>}>\n            <Col xs={6} sm={2} med={4}>\n                <Card className='mainpage-cards search-cards'>\n                    <Link to ={`/manga/${m.mal_id}`}><Card.Img className='mainpage-card-images' variant=\"top\" src={m.image_url} /></Link>\n                </Card>\n            </Col>\n        </OverlayTrigger>\n    ))\n\n\n    return (\n        <div>\n            \n            <Container className=\"manga-search\">\n                <Col style={{width: '22rem'}} className='mx-auto'>\n                    <div className=\"searchbar\">\n                        <input type=\"text\" className=\"search-input\" value={mangaSearchQuery} onChange={handleChange} placeholder=\"eg. 'Naruto'\"/>\n                        <a   onClick={handleSearch} className=\"search-icon\"><RiSearchLine/></a>\n                    </div>\n                </Col>\n                <h1 className=\"mt-5\">Showing results for: {searchQuery}</h1>\n            </Container>\n            <Container className=\"d-flex justify-content-center\">\n                <Row>\n                    {renderResults}\n                    {isLoading ? <Loading /> : null}\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default MangaSearchPage\n","import Homepage from \"./Components/Homepage\"\nimport Login from \"./Components/User/Login\"\nimport SignUp from \"./Components/User/SignUp\"\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport NavBar from './Components/NavBar'\nimport AnimePage from './Components/Anime/AnimePage'\nimport ProfilePage from \"./Components/User/ProfilePage\"\nimport Loading from './Components/Loading'\nimport React, { useState } from 'react'\nimport MangaHome from './Components/Manga/MangaHome'\nimport MangaPage from './Components/Manga/MangaPage'\nimport TopAnimeUpcomingList from './Components/Anime/TopAnimeUpcomingList'\nimport TopAnimeByPopularityList from './Components/Anime/TopAnimeByPopularityList'\nimport TopAnimeAiringList from './Components/Anime/TopAnimeAiringList'\nimport TopAnimeByScoreList from './Components/Anime/TopAnimeByScoreList'\nimport TopMangaNovelsList from \"./Components/Manga/TopMangaNovelsList\"\nimport TopMangaByPopularityList from \"./Components/Manga/TopMangaByPopularityList\"\nimport TopMangaByScoreList from \"./Components/Manga/TopMangaByScoreList\"\nimport TopMangaOneShotsList from \"./Components/Manga/TopMangaOneShotsList\"\nimport AnimeSearchPage from \"./Components/Anime/AnimeSearchPage\"\nimport AnimeForum from \"./Components/Forums/AnimeForum\"\nimport GeneralForum from \"./Components/Forums/GeneralForum\"\nimport MangaForum from \"./Components/Forums/MangaForum\"\nimport ForumPostForm from \"./Components/Forums/ForumPostForm\"\nimport ForumPost from \"./Components/Forums/ForumPost\"\nimport AnimeList from \"./Components/Anime/AnimeList\"\nimport MangaList from \"./Components/Manga/MangaList\"\nimport MangaSearchPage from \"./Components/Manga/MangaSearchPage\"\nimport {useGetData} from './Hooks/useGetData'\n\nfunction App() {\n  // User state for conditional rendering of logout icon\n  const [userIsLoggedIn, setUserIsLoggedIn] = useState(false)\n\n\n  const onSuccess = (data) => {\n    if (data) {\n      setUserIsLoggedIn(true)\n    }\n    \n  }\n\n  const {data: user, isLoading: userIsLoading} = useGetData('/user', onSuccess)\n  \n  if (userIsLoading) return <Loading/>\n\n\n\n  return (\n    <div className=\"App\">\n      {/* {loading ? <Loading /> : \n      <> */}\n        <NavBar userIsLoggedIn={userIsLoggedIn} setUserIsLoggedIn={setUserIsLoggedIn}/> \n        <Switch>\n          <Route exact path=\"/mangalist\">\n            <MangaList user={user}/>\n          </Route>\n          <Route exact path=\"/animelist\">\n            <AnimeList user={user}/>\n          </Route>\n          <Route exact path=\"/forums/newpost\">\n            <ForumPostForm user={user}/>\n          </Route>\n          <Route exact path=\"/forums/anime\">\n            <AnimeForum user={user}/>\n          </Route>\n          <Route exact path=\"/forums/manga\">\n            <MangaForum user={user}/>\n          </Route>\n          <Route exact path=\"/forums/general\">\n            <GeneralForum user={user}/>\n          </Route>\n          <Route exact path=\"/forums/post/:id\">\n            <ForumPost user={user}/>\n          </Route>\n          <Route exact path=\"/topmanga/score\">\n            <TopMangaByScoreList />\n          </Route>\n          <Route exact path=\"/topmanga/oneshots\">\n            <TopMangaOneShotsList />\n          </Route>\n          <Route exact path=\"/topmanga/novels\">\n            <TopMangaNovelsList />\n          </Route>\n          <Route exact path=\"/topmanga/popularity\">\n            <TopMangaByPopularityList />\n          </Route>\n          <Route exact path =\"/topanime/score\">\n            <TopAnimeByScoreList />\n          </Route>\n          <Route exact path=\"/topanime/upcoming\">\n            <TopAnimeUpcomingList />\n          </Route>\n          <Route exact path=\"/topanime/popularity\">\n            <TopAnimeByPopularityList />\n          </Route>\n          <Route exact path=\"/topanime/airing\">\n            <TopAnimeAiringList />\n          </Route>\n          <Route exact path=\"/manga/:id\">\n            <MangaPage user={user}/>\n          </Route>\n          <Route exact path=\"/profile\">\n            <ProfilePage user={user}/>\n          </Route>\n          <Route exact path=\"/anime/:id\">\n            <AnimePage user={user}/>\n          </Route>\n          <Route exact path=\"/login\">\n            <Login setUserIsLoggedIn={setUserIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp setUserIsLoggedIn={setUserIsLoggedIn}/>\n          </Route>\n          <Route exact path=\"/search/manga\">\n            <MangaSearchPage />\n          </Route>\n          <Route exact path=\"/manga\">\n            <MangaHome />\n          </Route>\n          <Route exact path=\"/search/anime\">\n            <AnimeSearchPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/loading\">\n            <Loading />\n          </Route>\n          <Route path=\"*\">\n            <h1>404 not found</h1>\n            <Redirect from=\"*\" to=\"/\" />\n          </Route>\n        </Switch>\n      {/* </>} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport searchReducer from './search'\n\nexport const store = configureStore({\n  reducer: {\n      search: searchReducer\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { QueryClient, QueryClientProvider} from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { store }  from './Redux-Toolkit/store'\nimport { Provider } from 'react-redux'\n\nconst queryClient = new QueryClient()\n\n\nReactDOM.render(\n  <Router>\n      <React.StrictMode>\n        <QueryClientProvider client={queryClient}>\n          <Provider store={store}>\n            <App />\n          </Provider>\n          <ReactQueryDevtools initialIsOpen={false} />\n        </QueryClientProvider>\n      </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}